apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "client.fullname" . }}
  labels:
    {{- include "client.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "client.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        rollme: {{ randAlphaNum 5 | quote }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "client.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "client.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if .Values.configmap.enabled }}
      volumes:
        - name: config
          configMap:
            name: {{ include "client.fullname" . }}
            # An array of keys from the ConfigMap to create as files
            items:
            - key: "config"
              path: {{ .Values.configmap.mountFileName }}
      {{- end }}      
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            {{- range .Values.image.env }}
            - name: {{ .name }}
              value: {{ .value }}
               {{- end }}
          {{- if .Values.configmap.enabled }}     
          volumeMounts: 
            - name: config
              mountPath: {{ .Values.configmap.mountPath }}
              readOnly: true
          {{- end }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          {{- if .Values.healthcheck.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.healthcheck.livenessProbePath }}
              port: http
          readinessProbe:
            httpGet:
              path: {{ .Values.healthcheck.readinessProbePath }}
              port: http
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
